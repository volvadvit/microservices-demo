{
	"info": {
		"_postman_id": "3cfbd275-4aad-4ee2-a327-40cfd6085e45",
		"name": "Spring Cloud Demo",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get User By Id",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8765/users/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8765",
					"path": [
						"users",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Conversation By Id",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8765/conversations/2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8765",
					"path": [
						"conversations",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create New Message",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"message\": \"Test conversation 22\",\r\n    \"senderId\": 3,\r\n    \"conversationId\": 1\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8765/messages",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8765",
					"path": [
						"messages"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Message body",
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "clientSecret",
							"value": "6NUGrgjszYu6EhtHq3lMWTqFLgTq8avD",
							"type": "string"
						},
						{
							"key": "scope",
							"value": "openid PUBLIC_API",
							"type": "string"
						},
						{
							"key": "client_authentication",
							"value": "body",
							"type": "string"
						},
						{
							"key": "accessTokenUrl",
							"value": "http://localhost:7080/realms/spring-services/protocol/openid-connect/token",
							"type": "string"
						},
						{
							"key": "tokenName",
							"value": "Bearer",
							"type": "string"
						},
						{
							"key": "grant_type",
							"value": "client_credentials",
							"type": "string"
						},
						{
							"key": "authUrl",
							"value": "http://localhost:8765/oauth2/authorization/keycloak",
							"type": "string"
						},
						{
							"key": "useBrowser",
							"value": false,
							"type": "boolean"
						},
						{
							"key": "clientId",
							"value": "gateway-oauth",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Idempotency-Key",
						"value": "455a9b73-dae8-4f67-851e-ad489f44deee",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"message\": \"Test conversation 22\",\r\n    \"messageId\": 1\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8765/messages",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8765",
					"path": [
						"messages"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Messages Created After",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8765/messages?date=2025-01-01T10:15:30",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8765",
					"path": [
						"messages"
					],
					"query": [
						{
							"key": "date",
							"value": "2025-01-01T10:15:30"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Send message to Kafka",
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "clientSecret",
							"value": "6NUGrgjszYu6EhtHq3lMWTqFLgTq8avD",
							"type": "string"
						},
						{
							"key": "scope",
							"value": "openid PUBLIC_API",
							"type": "string"
						},
						{
							"key": "client_authentication",
							"value": "body",
							"type": "string"
						},
						{
							"key": "accessTokenUrl",
							"value": "http://localhost:7080/realms/spring-services/protocol/openid-connect/token",
							"type": "string"
						},
						{
							"key": "tokenName",
							"value": "Bearer",
							"type": "string"
						},
						{
							"key": "grant_type",
							"value": "client_credentials",
							"type": "string"
						},
						{
							"key": "authUrl",
							"value": "http://localhost:8765/oauth2/authorization/keycloak",
							"type": "string"
						},
						{
							"key": "useBrowser",
							"value": false,
							"type": "boolean"
						},
						{
							"key": "clientId",
							"value": "gateway-oauth",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"message\": \"test-test\",\r\n    \"senderId\": 1,\r\n    \"conversationId\": 2\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8765/kafka/send",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8765",
					"path": [
						"kafka",
						"send"
					]
				}
			},
			"response": []
		},
		{
			"name": "Kafka-Producer Actuator Health-Check",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "scope",
							"value": "metrics",
							"type": "string"
						},
						{
							"key": "clientSecret",
							"value": "gtEwE1N03WZocnJ5Tf9xH4WxA48pzcDy",
							"type": "string"
						},
						{
							"key": "clientId",
							"value": "admin-service",
							"type": "string"
						},
						{
							"key": "client_authentication",
							"value": "body",
							"type": "string"
						},
						{
							"key": "accessTokenUrl",
							"value": "http://localhost:7080/realms/spring-services/protocol/openid-connect/token",
							"type": "string"
						},
						{
							"key": "tokenName",
							"value": "Bearer",
							"type": "string"
						},
						{
							"key": "grant_type",
							"value": "client_credentials",
							"type": "string"
						},
						{
							"key": "authUrl",
							"value": "http://localhost:8765/oauth2/authorization/keycloak",
							"type": "string"
						},
						{
							"key": "useBrowser",
							"value": false,
							"type": "boolean"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"message\": \"test-test\",\r\n    \"senderId\": 1,\r\n    \"conversationId\": 2\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:53523/actuator/health",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "53523",
					"path": [
						"actuator",
						"health"
					]
				}
			},
			"response": []
		},
		{
			"name": "Kafka service health-check",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8765/loadbalancer/server/health-check",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8765",
					"path": [
						"loadbalancer",
						"server",
						"health-check"
					],
					"query": [
						{
							"key": "message",
							"value": "{\\\"}",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Load Balancer Request from Client",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8085/loadbalancer/client/checkServer",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8085",
					"path": [
						"loadbalancer",
						"client",
						"checkServer"
					],
					"query": [
						{
							"key": "message",
							"value": "{\\\"}",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Config",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "pwd_config",
							"type": "string"
						},
						{
							"key": "username",
							"value": "user_config",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8888/spring-data-cloudconfig.yml",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8888",
					"path": [
						"spring-data-cloudconfig.yml"
					],
					"query": [
						{
							"key": "message",
							"value": "{\\\"}",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get OAuth Token",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "client_id",
							"value": "gateway-oauth",
							"type": "default"
						},
						{
							"key": "client_secret",
							"value": "6NUGrgjszYu6EhtHq3lMWTqFLgTq8avD",
							"type": "default"
						},
						{
							"key": "grant_type",
							"value": "client_credentials",
							"type": "default"
						}
					]
				},
				"url": {
					"raw": "http://localhost:7080/realms/spring-services/protocol/openid-connect/token",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "7080",
					"path": [
						"realms",
						"spring-services",
						"protocol",
						"openid-connect",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "gRPC Send Message",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/client/send?name=test",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"client",
						"send"
					],
					"query": [
						{
							"key": "name",
							"value": "test"
						}
					]
				}
			},
			"response": []
		}
	]
}